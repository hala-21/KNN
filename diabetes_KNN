{"metadata":{"kernelspec":{"display_name":"Python 3","language":"python","name":"python3"},"language_info":{"name":"python","version":"3.6.5","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":408,"sourceType":"datasetVersion","datasetId":180}],"dockerImageVersionId":4692,"isInternetEnabled":false,"language":"python","sourceType":"notebook","isGpuEnabled":false},"colab":{"provenance":[{"file_id":"1s0Bb625L3tfZ7Kd0Re3_VNB5Mnvplxax","timestamp":1733832826590},{"file_id":"https://storage.googleapis.com/kaggle-colab-exported-notebooks/breast-cancer-dataset-classification-013ecd4b-c44a-42e5-8f38-33effcefcff4.ipynb?X-Goog-Algorithm=GOOG4-RSA-SHA256&X-Goog-Credential=gcp-kaggle-com%40kaggle-161607.iam.gserviceaccount.com/20241210/auto/storage/goog4_request&X-Goog-Date=20241210T093411Z&X-Goog-Expires=259200&X-Goog-SignedHeaders=host&X-Goog-Signature=996cf01ac21d73f7ba9f538fe78124de57067f287bc685bfa1e3e318f39d88fd1d94c6fb4ff718c3fc7d54724d54186c4081f4fa6d71ad215ad6e8f7f8db0924b23bb7b696edbe11d82324ad7ca3c9a481f87a67f55f5d7f52664483413cb1ac50fa5a28379c825fdfcf80ce8b42fa536543e10e4c2676304f2f0289e863deb7e5ca52c36ca822a3d923f73bb147fbcedebaab39facae70759ffe9c15b5d5163655454662988e48cd49d5158edc46d861cacff7d5ed284605c68b95f3c3547dcf4bde9ac4ae3618cf21080406cbd1b96a2b31cd254db4b11125a173dfe34f03e1fb25aac88fe064b761122624e3144efde81b5b293df9781c0617749e6215845","timestamp":1733831671933}]}},"nbformat_minor":0,"nbformat":4,"cells":[{"cell_type":"code","source":["import numpy as np\n","import pandas as pd\n","import matplotlib.pyplot as plt\n","from sklearn.datasets import load_breast_cancer\n","from sklearn.model_selection import train_test_split\n","plt.style.use('ggplot')\n","\n"],"metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","trusted":true,"id":"_cPanQ-k-LRN","executionInfo":{"status":"ok","timestamp":1733978906131,"user_tz":-120,"elapsed":8700,"user":{"displayName":"Hala Abden","userId":"10548446459279410261"}}},"outputs":[],"execution_count":1},{"cell_type":"code","source":["df = pd.read_csv('/content/diabetes2.csv')\n","df"],"metadata":{"trusted":true,"_uuid":"bb9bbec9c2aea68e23d295d3edd555fa46141547","execution":{"iopub.status.busy":"2024-12-10T09:09:55.762079Z","iopub.execute_input":"2024-12-10T09:09:55.762356Z","iopub.status.idle":"2024-12-10T09:09:55.836098Z","shell.execute_reply.started":"2024-12-10T09:09:55.762308Z","shell.execute_reply":"2024-12-10T09:09:55.834958Z"},"id":"5nkiWggl-LRO","executionInfo":{"status":"ok","timestamp":1733978906136,"user_tz":-120,"elapsed":100,"user":{"displayName":"Hala Abden","userId":"10548446459279410261"}},"outputId":"43a9a8d3-e6f5-41b8-e708-496531685d15","colab":{"base_uri":"https://localhost:8080/","height":423}},"outputs":[{"output_type":"execute_result","data":{"text/plain":["     Pregnancies  Glucose  BloodPressure  SkinThickness  Insulin   BMI  \\\n","0              6      148             72             35        0  33.6   \n","1              1       85             66             29        0  26.6   \n","2              8      183             64              0        0  23.3   \n","3              1       89             66             23       94  28.1   \n","4              0      137             40             35      168  43.1   \n","..           ...      ...            ...            ...      ...   ...   \n","763           10      101             76             48      180  32.9   \n","764            2      122             70             27        0  36.8   \n","765            5      121             72             23      112  26.2   \n","766            1      126             60              0        0  30.1   \n","767            1       93             70             31        0  30.4   \n","\n","     DiabetesPedigreeFunction  Age  Outcome  \n","0                       0.627   50        1  \n","1                       0.351   31        0  \n","2                       0.672   32        1  \n","3                       0.167   21        0  \n","4                       2.288   33        1  \n","..                        ...  ...      ...  \n","763                     0.171   63        0  \n","764                     0.340   27        0  \n","765                     0.245   30        0  \n","766                     0.349   47        1  \n","767                     0.315   23        0  \n","\n","[768 rows x 9 columns]"],"text/html":["\n","  <div id=\"df-9cd9004d-780d-43ab-b18a-2241014520c9\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Pregnancies</th>\n","      <th>Glucose</th>\n","      <th>BloodPressure</th>\n","      <th>SkinThickness</th>\n","      <th>Insulin</th>\n","      <th>BMI</th>\n","      <th>DiabetesPedigreeFunction</th>\n","      <th>Age</th>\n","      <th>Outcome</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>6</td>\n","      <td>148</td>\n","      <td>72</td>\n","      <td>35</td>\n","      <td>0</td>\n","      <td>33.6</td>\n","      <td>0.627</td>\n","      <td>50</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>85</td>\n","      <td>66</td>\n","      <td>29</td>\n","      <td>0</td>\n","      <td>26.6</td>\n","      <td>0.351</td>\n","      <td>31</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>8</td>\n","      <td>183</td>\n","      <td>64</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>23.3</td>\n","      <td>0.672</td>\n","      <td>32</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1</td>\n","      <td>89</td>\n","      <td>66</td>\n","      <td>23</td>\n","      <td>94</td>\n","      <td>28.1</td>\n","      <td>0.167</td>\n","      <td>21</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0</td>\n","      <td>137</td>\n","      <td>40</td>\n","      <td>35</td>\n","      <td>168</td>\n","      <td>43.1</td>\n","      <td>2.288</td>\n","      <td>33</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>763</th>\n","      <td>10</td>\n","      <td>101</td>\n","      <td>76</td>\n","      <td>48</td>\n","      <td>180</td>\n","      <td>32.9</td>\n","      <td>0.171</td>\n","      <td>63</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>764</th>\n","      <td>2</td>\n","      <td>122</td>\n","      <td>70</td>\n","      <td>27</td>\n","      <td>0</td>\n","      <td>36.8</td>\n","      <td>0.340</td>\n","      <td>27</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>765</th>\n","      <td>5</td>\n","      <td>121</td>\n","      <td>72</td>\n","      <td>23</td>\n","      <td>112</td>\n","      <td>26.2</td>\n","      <td>0.245</td>\n","      <td>30</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>766</th>\n","      <td>1</td>\n","      <td>126</td>\n","      <td>60</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>30.1</td>\n","      <td>0.349</td>\n","      <td>47</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>767</th>\n","      <td>1</td>\n","      <td>93</td>\n","      <td>70</td>\n","      <td>31</td>\n","      <td>0</td>\n","      <td>30.4</td>\n","      <td>0.315</td>\n","      <td>23</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>768 rows Ã— 9 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-9cd9004d-780d-43ab-b18a-2241014520c9')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-9cd9004d-780d-43ab-b18a-2241014520c9 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-9cd9004d-780d-43ab-b18a-2241014520c9');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-34bd9919-d7d1-4731-8148-11d54211d8ad\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-34bd9919-d7d1-4731-8148-11d54211d8ad')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-34bd9919-d7d1-4731-8148-11d54211d8ad button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_6aeffa43-050f-44bf-9d7c-da2df06e1c8c\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_6aeffa43-050f-44bf-9d7c-da2df06e1c8c button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('df');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df","summary":"{\n  \"name\": \"df\",\n  \"rows\": 768,\n  \"fields\": [\n    {\n      \"column\": \"Pregnancies\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3,\n        \"min\": 0,\n        \"max\": 17,\n        \"num_unique_values\": 17,\n        \"samples\": [\n          6,\n          1,\n          3\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Glucose\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 31,\n        \"min\": 0,\n        \"max\": 199,\n        \"num_unique_values\": 136,\n        \"samples\": [\n          151,\n          101,\n          112\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"BloodPressure\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 19,\n        \"min\": 0,\n        \"max\": 122,\n        \"num_unique_values\": 47,\n        \"samples\": [\n          86,\n          46,\n          85\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"SkinThickness\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 15,\n        \"min\": 0,\n        \"max\": 99,\n        \"num_unique_values\": 51,\n        \"samples\": [\n          7,\n          12,\n          48\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Insulin\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 115,\n        \"min\": 0,\n        \"max\": 846,\n        \"num_unique_values\": 186,\n        \"samples\": [\n          52,\n          41,\n          183\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"BMI\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 7.8841603203754405,\n        \"min\": 0.0,\n        \"max\": 67.1,\n        \"num_unique_values\": 248,\n        \"samples\": [\n          19.9,\n          31.0,\n          38.1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"DiabetesPedigreeFunction\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.33132859501277484,\n        \"min\": 0.078,\n        \"max\": 2.42,\n        \"num_unique_values\": 517,\n        \"samples\": [\n          1.731,\n          0.426,\n          0.138\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Age\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 11,\n        \"min\": 21,\n        \"max\": 81,\n        \"num_unique_values\": 52,\n        \"samples\": [\n          60,\n          47,\n          72\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Outcome\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":2}],"execution_count":2},{"cell_type":"code","source":["df.info()"],"metadata":{"trusted":true,"_uuid":"4764069f6034962e98df8ae881f2a833f2afadce","execution":{"iopub.status.busy":"2024-12-10T09:09:55.837562Z","iopub.execute_input":"2024-12-10T09:09:55.837807Z","iopub.status.idle":"2024-12-10T09:09:55.849517Z","shell.execute_reply.started":"2024-12-10T09:09:55.837763Z","shell.execute_reply":"2024-12-10T09:09:55.848492Z"},"id":"ysmFkhrA-LRP","executionInfo":{"status":"ok","timestamp":1733978906137,"user_tz":-120,"elapsed":37,"user":{"displayName":"Hala Abden","userId":"10548446459279410261"}},"outputId":"59690a04-cc7c-4eb0-e428-94d79142a401","colab":{"base_uri":"https://localhost:8080/"}},"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 768 entries, 0 to 767\n","Data columns (total 9 columns):\n"," #   Column                    Non-Null Count  Dtype  \n","---  ------                    --------------  -----  \n"," 0   Pregnancies               768 non-null    int64  \n"," 1   Glucose                   768 non-null    int64  \n"," 2   BloodPressure             768 non-null    int64  \n"," 3   SkinThickness             768 non-null    int64  \n"," 4   Insulin                   768 non-null    int64  \n"," 5   BMI                       768 non-null    float64\n"," 6   DiabetesPedigreeFunction  768 non-null    float64\n"," 7   Age                       768 non-null    int64  \n"," 8   Outcome                   768 non-null    int64  \n","dtypes: float64(2), int64(7)\n","memory usage: 54.1 KB\n"]}],"execution_count":3},{"cell_type":"code","source":["X = df.drop(columns=['Outcome'])\n","print(X)\n","y = df.loc[:, 'Outcome']\n","print(y)\n","X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.2, random_state = 42)"],"metadata":{"trusted":true,"_uuid":"a4b3a5b1237a3e361d28d04d0ab1bb00120a6e3b","execution":{"iopub.status.busy":"2024-12-10T09:10:08.520532Z","iopub.execute_input":"2024-12-10T09:10:08.520784Z","iopub.status.idle":"2024-12-10T09:10:08.529896Z","shell.execute_reply.started":"2024-12-10T09:10:08.520739Z","shell.execute_reply":"2024-12-10T09:10:08.528872Z"},"id":"w1sAmnio-LRT","executionInfo":{"status":"ok","timestamp":1733978906138,"user_tz":-120,"elapsed":28,"user":{"displayName":"Hala Abden","userId":"10548446459279410261"}},"outputId":"0b4a8f74-92ea-4757-9c72-5cbec7bcdfc3","colab":{"base_uri":"https://localhost:8080/"}},"outputs":[{"output_type":"stream","name":"stdout","text":["     Pregnancies  Glucose  BloodPressure  SkinThickness  Insulin   BMI  \\\n","0              6      148             72             35        0  33.6   \n","1              1       85             66             29        0  26.6   \n","2              8      183             64              0        0  23.3   \n","3              1       89             66             23       94  28.1   \n","4              0      137             40             35      168  43.1   \n","..           ...      ...            ...            ...      ...   ...   \n","763           10      101             76             48      180  32.9   \n","764            2      122             70             27        0  36.8   \n","765            5      121             72             23      112  26.2   \n","766            1      126             60              0        0  30.1   \n","767            1       93             70             31        0  30.4   \n","\n","     DiabetesPedigreeFunction  Age  \n","0                       0.627   50  \n","1                       0.351   31  \n","2                       0.672   32  \n","3                       0.167   21  \n","4                       2.288   33  \n","..                        ...  ...  \n","763                     0.171   63  \n","764                     0.340   27  \n","765                     0.245   30  \n","766                     0.349   47  \n","767                     0.315   23  \n","\n","[768 rows x 8 columns]\n","0      1\n","1      0\n","2      1\n","3      0\n","4      1\n","      ..\n","763    0\n","764    0\n","765    0\n","766    1\n","767    0\n","Name: Outcome, Length: 768, dtype: int64\n"]}],"execution_count":4},{"cell_type":"code","source":["#knn\n","from sklearn.model_selection import train_test_split\n","from sklearn.neighbors import KNeighborsClassifier\n","import matplotlib.pyplot as plt\n","import seaborn as sns\n","from sklearn.metrics import classification_report, accuracy_score\n","\n","X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.2, random_state = 0) # random_state = 0 \"GIVE BETTER SCORE AND ACCURACY\"\n","#Training the model\n","K = []     # ARRAY OF NO OF VALUES OF THE NEAREST  INPUTS TO THE OUTPUTS (A2RAB KAM RAKAM)\n","training = []\n","test = []\n","scores = {}\n","\n","for k in range(1, 20):\n","    clf = KNeighborsClassifier(n_neighbors=k)\n","    clf.fit(X_train, y_train)\n","    training_score = clf.score(X_train, y_train)  # calculates the accuracy of your trained KNN\n","    test_score = clf.score(X_test, y_test)    ## calculates the accuracy of your tested KNN\n","    K.append(k)  # IF THE K THAT WE ITTERATE ON (0:20) GIVES A GOOD SCORE APPAEND (ADD) IT TO THE EMPTY ARRAY OK K WE HAVE INITIALAIZED AT THE BEGINING\n","    training.append(training_score)\n","    test.append(test_score)\n","    scores[k] = [training_score, test_score]\n","    y_pred = clf.predict(X_test)\n","print(\"Training Accuracy:\", accuracy_score(y_test, y_pred))\n","\n","training_score = clf.score(X_train, y_train)\n","print(\"Training SCORE:\", training_score)\n","\n","\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"0J83a3AAf5Vt","executionInfo":{"status":"ok","timestamp":1733978909909,"user_tz":-120,"elapsed":3794,"user":{"displayName":"Hala Abden","userId":"10548446459279410261"}},"outputId":"ee739937-4916-4e7b-ce3d-eed3d2cc7e2e"},"execution_count":5,"outputs":[{"output_type":"stream","name":"stdout","text":["Training Accuracy: 0.7987012987012987\n","Training SCORE: 0.762214983713355\n"]}]},{"cell_type":"code","source":["# Plot training and test accuracy\n","plt.figure(figsize=(10, 6))\n","sns.lineplot(x=K, y=training, label='Training Accuracy', color='blue')\n","sns.lineplot(x=K, y=test, label='Test Accuracy', color='red')\n","plt.title('KNN Accuracy vs. Number of Neighbors (k)')\n","plt.xlabel('Number of Neighbors (k)')\n","plt.ylabel('Accuracy')\n","plt.legend()\n","plt.show()\n"],"metadata":{"id":"TFGUXNvejbe9","colab":{"base_uri":"https://localhost:8080/","height":569},"executionInfo":{"status":"ok","timestamp":1733979918589,"user_tz":-120,"elapsed":1501,"user":{"displayName":"Hala Abden","userId":"10548446459279410261"}},"outputId":"3ed5f9cb-330c-48ab-bb5b-d92c68a26296"},"execution_count":6,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1000x600 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":[],"metadata":{"id":"cbz1P8lahM1d","executionInfo":{"status":"ok","timestamp":1733978909910,"user_tz":-120,"elapsed":12,"user":{"displayName":"Hala Abden","userId":"10548446459279410261"}}},"execution_count":5,"outputs":[]}]}